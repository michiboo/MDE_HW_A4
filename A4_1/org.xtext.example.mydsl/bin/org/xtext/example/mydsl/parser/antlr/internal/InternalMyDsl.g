/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "cryptoExchange";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulecryptoExchange
entryRulecryptoExchange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCryptoExchangeRule()); }
	iv_rulecryptoExchange=rulecryptoExchange
	{ $current=$iv_rulecryptoExchange.current; }
	EOF;

// Rule cryptoExchange
rulecryptoExchange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='cryptoExchange'
		{
			newLeafNode(otherlv_0, grammarAccess.getCryptoExchangeAccess().getCryptoExchangeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCryptoExchangeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCryptoExchangeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='IP'
			{
				newLeafNode(otherlv_3, grammarAccess.getCryptoExchangeAccess().getIPKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCryptoExchangeAccess().getIPEStringParserRuleCall_3_1_0());
					}
					lv_IP_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
						}
						set(
							$current,
							"IP",
							lv_IP_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='DomainName'
			{
				newLeafNode(otherlv_5, grammarAccess.getCryptoExchangeAccess().getDomainNameKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCryptoExchangeAccess().getDomainNameEStringParserRuleCall_4_1_0());
					}
					lv_DomainName_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
						}
						set(
							$current,
							"DomainName",
							lv_DomainName_6_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='SubSystem'
		{
			newLeafNode(otherlv_7, grammarAccess.getCryptoExchangeAccess().getSubSystemKeyword_5());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getCryptoExchangeAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCryptoExchangeAccess().getSubSystemSubSystemParserRuleCall_7_0());
				}
				lv_SubSystem_9_0=ruleSubSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
					}
					add(
						$current,
						"SubSystem",
						lv_SubSystem_9_0,
						"org.xtext.example.mydsl.MyDsl.SubSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getCryptoExchangeAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCryptoExchangeAccess().getSubSystemSubSystemParserRuleCall_8_1_0());
					}
					lv_SubSystem_11_0=ruleSubSystem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
						}
						add(
							$current,
							"SubSystem",
							lv_SubSystem_11_0,
							"org.xtext.example.mydsl.MyDsl.SubSystem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getCryptoExchangeAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_13='Tokens'
		{
			newLeafNode(otherlv_13, grammarAccess.getCryptoExchangeAccess().getTokensKeyword_10());
		}
		otherlv_14='{'
		{
			newLeafNode(otherlv_14, grammarAccess.getCryptoExchangeAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCryptoExchangeAccess().getTokensTokenParserRuleCall_12_0());
				}
				lv_Tokens_15_0=ruleToken
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
					}
					add(
						$current,
						"Tokens",
						lv_Tokens_15_0,
						"org.xtext.example.mydsl.MyDsl.Token");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16=','
			{
				newLeafNode(otherlv_16, grammarAccess.getCryptoExchangeAccess().getCommaKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCryptoExchangeAccess().getTokensTokenParserRuleCall_13_1_0());
					}
					lv_Tokens_17_0=ruleToken
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
						}
						add(
							$current,
							"Tokens",
							lv_Tokens_17_0,
							"org.xtext.example.mydsl.MyDsl.Token");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getCryptoExchangeAccess().getRightCurlyBracketKeyword_14());
		}
		otherlv_19='TokenNetworks'
		{
			newLeafNode(otherlv_19, grammarAccess.getCryptoExchangeAccess().getTokenNetworksKeyword_15());
		}
		otherlv_20='{'
		{
			newLeafNode(otherlv_20, grammarAccess.getCryptoExchangeAccess().getLeftCurlyBracketKeyword_16());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCryptoExchangeAccess().getTokenNetworksTokenNetworkParserRuleCall_17_0());
				}
				lv_TokenNetworks_21_0=ruleTokenNetwork
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
					}
					add(
						$current,
						"TokenNetworks",
						lv_TokenNetworks_21_0,
						"org.xtext.example.mydsl.MyDsl.TokenNetwork");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_22=','
			{
				newLeafNode(otherlv_22, grammarAccess.getCryptoExchangeAccess().getCommaKeyword_18_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCryptoExchangeAccess().getTokenNetworksTokenNetworkParserRuleCall_18_1_0());
					}
					lv_TokenNetworks_23_0=ruleTokenNetwork
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCryptoExchangeRule());
						}
						add(
							$current,
							"TokenNetworks",
							lv_TokenNetworks_23_0,
							"org.xtext.example.mydsl.MyDsl.TokenNetwork");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getCryptoExchangeAccess().getRightCurlyBracketKeyword_19());
		}
		otherlv_25='}'
		{
			newLeafNode(otherlv_25, grammarAccess.getCryptoExchangeAccess().getRightCurlyBracketKeyword_20());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSubSystem
entryRuleSubSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubSystemRule()); }
	iv_ruleSubSystem=ruleSubSystem
	{ $current=$iv_ruleSubSystem.current; }
	EOF;

// Rule SubSystem
ruleSubSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSubSystemAccess().getSubSystemAction_0(),
					$current);
			}
		)
		otherlv_1='SubSystem'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubSystemAccess().getSubSystemKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubSystemAccess().getNameSubSystemNameEnumRuleCall_2_0());
				}
				lv_name_2_0=ruleSubSystemName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MyDsl.SubSystemName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSubSystemAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='accounts'
			{
				newLeafNode(otherlv_4, grammarAccess.getSubSystemAccess().getAccountsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getSubSystemAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubSystemAccess().getAccountsAccountParserRuleCall_4_2_0());
					}
					lv_accounts_6_0=ruleAccount
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubSystemRule());
						}
						add(
							$current,
							"accounts",
							lv_accounts_6_0,
							"org.xtext.example.mydsl.MyDsl.Account");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getSubSystemAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSystemAccess().getAccountsAccountParserRuleCall_4_3_1_0());
						}
						lv_accounts_8_0=ruleAccount
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSystemRule());
							}
							add(
								$current,
								"accounts",
								lv_accounts_8_0,
								"org.xtext.example.mydsl.MyDsl.Account");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getSubSystemAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='TokenPairs'
			{
				newLeafNode(otherlv_10, grammarAccess.getSubSystemAccess().getTokenPairsKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getSubSystemAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubSystemAccess().getTokenPairsTokenPairParserRuleCall_5_2_0());
					}
					lv_TokenPairs_12_0=ruleTokenPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubSystemRule());
						}
						add(
							$current,
							"TokenPairs",
							lv_TokenPairs_12_0,
							"org.xtext.example.mydsl.MyDsl.TokenPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getSubSystemAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSystemAccess().getTokenPairsTokenPairParserRuleCall_5_3_1_0());
						}
						lv_TokenPairs_14_0=ruleTokenPair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSystemRule());
							}
							add(
								$current,
								"TokenPairs",
								lv_TokenPairs_14_0,
								"org.xtext.example.mydsl.MyDsl.TokenPair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getSubSystemAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_16='Orders'
			{
				newLeafNode(otherlv_16, grammarAccess.getSubSystemAccess().getOrdersKeyword_6_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getSubSystemAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubSystemAccess().getOrdersOrderParserRuleCall_6_2_0());
					}
					lv_Orders_18_0=ruleOrder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubSystemRule());
						}
						add(
							$current,
							"Orders",
							lv_Orders_18_0,
							"org.xtext.example.mydsl.MyDsl.Order");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getSubSystemAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSystemAccess().getOrdersOrderParserRuleCall_6_3_1_0());
						}
						lv_Orders_20_0=ruleOrder
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSystemRule());
							}
							add(
								$current,
								"Orders",
								lv_Orders_20_0,
								"org.xtext.example.mydsl.MyDsl.Order");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21='}'
			{
				newLeafNode(otherlv_21, grammarAccess.getSubSystemAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_22='SavingOrders'
			{
				newLeafNode(otherlv_22, grammarAccess.getSubSystemAccess().getSavingOrdersKeyword_7_0());
			}
			otherlv_23='{'
			{
				newLeafNode(otherlv_23, grammarAccess.getSubSystemAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubSystemAccess().getSavingOrdersSavingOrderParserRuleCall_7_2_0());
					}
					lv_SavingOrders_24_0=ruleSavingOrder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubSystemRule());
						}
						add(
							$current,
							"SavingOrders",
							lv_SavingOrders_24_0,
							"org.xtext.example.mydsl.MyDsl.SavingOrder");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getSubSystemAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSystemAccess().getSavingOrdersSavingOrderParserRuleCall_7_3_1_0());
						}
						lv_SavingOrders_26_0=ruleSavingOrder
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSystemRule());
							}
							add(
								$current,
								"SavingOrders",
								lv_SavingOrders_26_0,
								"org.xtext.example.mydsl.MyDsl.SavingOrder");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27='}'
			{
				newLeafNode(otherlv_27, grammarAccess.getSubSystemAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_28='}'
		{
			newLeafNode(otherlv_28, grammarAccess.getSubSystemAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	iv_ruleToken=ruleToken
	{ $current=$iv_ruleToken.current; }
	EOF;

// Rule Token
ruleToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Token'
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenAccess().getTokenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='address'
			{
				newLeafNode(otherlv_3, grammarAccess.getTokenAccess().getAddressKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTokenAccess().getAddressEStringParserRuleCall_3_1_0());
					}
					lv_address_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTokenRule());
						}
						set(
							$current,
							"address",
							lv_address_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='decimal'
		{
			newLeafNode(otherlv_5, grammarAccess.getTokenAccess().getDecimalKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenAccess().getDecimalEIntParserRuleCall_5_0());
				}
				lv_decimal_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenRule());
					}
					set(
						$current,
						"decimal",
						lv_decimal_6_0,
						"org.xtext.example.mydsl.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='TokenNetwork'
		{
			newLeafNode(otherlv_7, grammarAccess.getTokenAccess().getTokenNetworkKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTokenAccess().getTokenNetworkTokenNetworkCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleTokenNetwork
entryRuleTokenNetwork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenNetworkRule()); }
	iv_ruleTokenNetwork=ruleTokenNetwork
	{ $current=$iv_ruleTokenNetwork.current; }
	EOF;

// Rule TokenNetwork
ruleTokenNetwork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TokenNetwork'
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenNetworkAccess().getTokenNetworkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenNetworkAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenNetworkRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTokenNetworkAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='chainID'
		{
			newLeafNode(otherlv_3, grammarAccess.getTokenNetworkAccess().getChainIDKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenNetworkAccess().getChainIDEIntParserRuleCall_4_0());
				}
				lv_chainID_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenNetworkRule());
					}
					set(
						$current,
						"chainID",
						lv_chainID_4_0,
						"org.xtext.example.mydsl.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='RPC'
			{
				newLeafNode(otherlv_5, grammarAccess.getTokenNetworkAccess().getRPCKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTokenNetworkAccess().getRPCEStringParserRuleCall_5_1_0());
					}
					lv_RPC_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTokenNetworkRule());
						}
						set(
							$current,
							"RPC",
							lv_RPC_6_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTokenNetworkAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAccount
entryRuleAccount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccountRule()); }
	iv_ruleAccount=ruleAccount
	{ $current=$iv_ruleAccount.current; }
	EOF;

// Rule Account
ruleAccount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAccountAccess().getAccountAction_0(),
					$current);
			}
		)
		otherlv_1='Account'
		{
			newLeafNode(otherlv_1, grammarAccess.getAccountAccess().getAccountKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAccountAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='TokensBalance'
			{
				newLeafNode(otherlv_3, grammarAccess.getAccountAccess().getTokensBalanceKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getAccountAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAccountAccess().getTokensBalanceTokenBalanceParserRuleCall_3_2_0());
					}
					lv_TokensBalance_5_0=ruleTokenBalance
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAccountRule());
						}
						add(
							$current,
							"TokensBalance",
							lv_TokensBalance_5_0,
							"org.xtext.example.mydsl.MyDsl.TokenBalance");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getAccountAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAccountAccess().getTokensBalanceTokenBalanceParserRuleCall_3_3_1_0());
						}
						lv_TokensBalance_7_0=ruleTokenBalance
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAccountRule());
							}
							add(
								$current,
								"TokensBalance",
								lv_TokensBalance_7_0,
								"org.xtext.example.mydsl.MyDsl.TokenBalance");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getAccountAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='transferRequest'
			{
				newLeafNode(otherlv_9, grammarAccess.getAccountAccess().getTransferRequestKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getAccountAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAccountAccess().getTransferRequestTransferRequestParserRuleCall_4_2_0());
					}
					lv_transferRequest_11_0=ruleTransferRequest
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAccountRule());
						}
						add(
							$current,
							"transferRequest",
							lv_transferRequest_11_0,
							"org.xtext.example.mydsl.MyDsl.TransferRequest");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getAccountAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAccountAccess().getTransferRequestTransferRequestParserRuleCall_4_3_1_0());
						}
						lv_transferRequest_13_0=ruleTransferRequest
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAccountRule());
							}
							add(
								$current,
								"transferRequest",
								lv_transferRequest_13_0,
								"org.xtext.example.mydsl.MyDsl.TransferRequest");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getAccountAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getAccountAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTokenPair
entryRuleTokenPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenPairRule()); }
	iv_ruleTokenPair=ruleTokenPair
	{ $current=$iv_ruleTokenPair.current; }
	EOF;

// Rule TokenPair
ruleTokenPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TokenPair'
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenPairAccess().getTokenPairKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTokenPairAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='price'
		{
			newLeafNode(otherlv_2, grammarAccess.getTokenPairAccess().getPriceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenPairAccess().getPriceEFloatParserRuleCall_3_0());
				}
				lv_price_3_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenPairRule());
					}
					set(
						$current,
						"price",
						lv_price_3_0,
						"org.xtext.example.mydsl.MyDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='TokenA'
		{
			newLeafNode(otherlv_4, grammarAccess.getTokenPairAccess().getTokenAKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenPairRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTokenPairAccess().getTokenATokenCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='TokenB'
		{
			newLeafNode(otherlv_6, grammarAccess.getTokenPairAccess().getTokenBKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenPairRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTokenPairAccess().getTokenBTokenCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getTokenPairAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleOrder
entryRuleOrder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderRule()); }
	iv_ruleOrder=ruleOrder
	{ $current=$iv_ruleOrder.current; }
	EOF;

// Rule Order
ruleOrder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Order'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderAccess().getOrderKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='Price'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrderAccess().getPriceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderAccess().getPriceEFloatParserRuleCall_3_0());
				}
				lv_Price_3_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderRule());
					}
					set(
						$current,
						"Price",
						lv_Price_3_0,
						"org.xtext.example.mydsl.MyDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='Amount'
		{
			newLeafNode(otherlv_4, grammarAccess.getOrderAccess().getAmountKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderAccess().getAmountEFloatParserRuleCall_5_0());
				}
				lv_Amount_5_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderRule());
					}
					set(
						$current,
						"Amount",
						lv_Amount_5_0,
						"org.xtext.example.mydsl.MyDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='leverage'
			{
				newLeafNode(otherlv_6, grammarAccess.getOrderAccess().getLeverageKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrderAccess().getLeverageLeverageTypeEnumRuleCall_6_1_0());
					}
					lv_leverage_7_0=ruleLeverageType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrderRule());
						}
						set(
							$current,
							"leverage",
							lv_leverage_7_0,
							"org.xtext.example.mydsl.MyDsl.LeverageType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='Type'
			{
				newLeafNode(otherlv_8, grammarAccess.getOrderAccess().getTypeKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrderAccess().getTypeOrderTypeEnumRuleCall_7_1_0());
					}
					lv_Type_9_0=ruleOrderType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrderRule());
						}
						set(
							$current,
							"Type",
							lv_Type_9_0,
							"org.xtext.example.mydsl.MyDsl.OrderType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='account'
		{
			newLeafNode(otherlv_10, grammarAccess.getOrderAccess().getAccountKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getOrderAccess().getAccountAccountCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='TokenPair'
		{
			newLeafNode(otherlv_12, grammarAccess.getOrderAccess().getTokenPairKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getOrderAccess().getTokenPairTokenPairCrossReference_11_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getOrderAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleSavingOrder
entryRuleSavingOrder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSavingOrderRule()); }
	iv_ruleSavingOrder=ruleSavingOrder
	{ $current=$iv_ruleSavingOrder.current; }
	EOF;

// Rule SavingOrder
ruleSavingOrder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SavingOrder'
		{
			newLeafNode(otherlv_0, grammarAccess.getSavingOrderAccess().getSavingOrderKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSavingOrderAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSavingOrderRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSavingOrderAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Amount'
		{
			newLeafNode(otherlv_3, grammarAccess.getSavingOrderAccess().getAmountKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSavingOrderAccess().getAmountEFloatParserRuleCall_4_0());
				}
				lv_Amount_4_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSavingOrderRule());
					}
					set(
						$current,
						"Amount",
						lv_Amount_4_0,
						"org.xtext.example.mydsl.MyDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='MatureDate'
			{
				newLeafNode(otherlv_5, grammarAccess.getSavingOrderAccess().getMatureDateKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSavingOrderAccess().getMatureDateEDateParserRuleCall_5_1_0());
					}
					lv_MatureDate_6_0=ruleEDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSavingOrderRule());
						}
						set(
							$current,
							"MatureDate",
							lv_MatureDate_6_0,
							"org.xtext.example.mydsl.MyDsl.EDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='Interest'
		{
			newLeafNode(otherlv_7, grammarAccess.getSavingOrderAccess().getInterestKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSavingOrderAccess().getInterestEDoubleParserRuleCall_7_0());
				}
				lv_Interest_8_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSavingOrderRule());
					}
					set(
						$current,
						"Interest",
						lv_Interest_8_0,
						"org.xtext.example.mydsl.MyDsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='account'
		{
			newLeafNode(otherlv_9, grammarAccess.getSavingOrderAccess().getAccountKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSavingOrderRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSavingOrderAccess().getAccountAccountCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='Token'
		{
			newLeafNode(otherlv_11, grammarAccess.getSavingOrderAccess().getTokenKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSavingOrderRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSavingOrderAccess().getTokenTokenCrossReference_11_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getSavingOrderAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleTokenBalance
entryRuleTokenBalance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenBalanceRule()); }
	iv_ruleTokenBalance=ruleTokenBalance
	{ $current=$iv_ruleTokenBalance.current; }
	EOF;

// Rule TokenBalance
ruleTokenBalance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TokenBalance'
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenBalanceAccess().getTokenBalanceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenBalanceAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenBalanceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTokenBalanceAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='balance'
		{
			newLeafNode(otherlv_3, grammarAccess.getTokenBalanceAccess().getBalanceKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenBalanceAccess().getBalanceEFloatParserRuleCall_4_0());
				}
				lv_balance_4_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenBalanceRule());
					}
					set(
						$current,
						"balance",
						lv_balance_4_0,
						"org.xtext.example.mydsl.MyDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='Token'
		{
			newLeafNode(otherlv_5, grammarAccess.getTokenBalanceAccess().getTokenKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenBalanceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTokenBalanceAccess().getTokenTokenCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTokenBalanceAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleTransferRequest
entryRuleTransferRequest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransferRequestRule()); }
	iv_ruleTransferRequest=ruleTransferRequest
	{ $current=$iv_ruleTransferRequest.current; }
	EOF;

// Rule TransferRequest
ruleTransferRequest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TransferRequest'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransferRequestAccess().getTransferRequestKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransferRequestAccess().getIDEStringParserRuleCall_1_0());
				}
				lv_ID_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransferRequestRule());
					}
					set(
						$current,
						"ID",
						lv_ID_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransferRequestAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getTransferRequestAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransferRequestAccess().getTypeTransferTypeEnumRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTransferType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransferRequestRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl.MyDsl.TransferType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='amount'
		{
			newLeafNode(otherlv_5, grammarAccess.getTransferRequestAccess().getAmountKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransferRequestAccess().getAmountEFloatParserRuleCall_5_0());
				}
				lv_amount_6_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransferRequestRule());
					}
					set(
						$current,
						"amount",
						lv_amount_6_0,
						"org.xtext.example.mydsl.MyDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='Token'
		{
			newLeafNode(otherlv_7, grammarAccess.getTransferRequestAccess().getTokenKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransferRequestRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransferRequestAccess().getTokenTokenCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='Destination'
		{
			newLeafNode(otherlv_9, grammarAccess.getTransferRequestAccess().getDestinationKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransferRequestRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransferRequestAccess().getDestinationAccountCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getTransferRequestAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEFloatRule()); }
	iv_ruleEFloat=ruleEFloat
	{ $current=$iv_ruleEFloat.current.getText(); }
	EOF;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDateRule()); }
	iv_ruleEDate=ruleEDate
	{ $current=$iv_ruleEDate.current.getText(); }
	EOF;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='EDate'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEDateAccess().getEDateKeyword());
	}
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Rule SubSystemName
ruleSubSystemName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Spot'
			{
				$current = grammarAccess.getSubSystemNameAccess().getSpotEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSubSystemNameAccess().getSpotEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Future'
			{
				$current = grammarAccess.getSubSystemNameAccess().getFutureEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSubSystemNameAccess().getFutureEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Margin'
			{
				$current = grammarAccess.getSubSystemNameAccess().getMarginEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSubSystemNameAccess().getMarginEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Saving'
			{
				$current = grammarAccess.getSubSystemNameAccess().getSavingEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSubSystemNameAccess().getSavingEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule TransferType
ruleTransferType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='IntraExchange'
			{
				$current = grammarAccess.getTransferTypeAccess().getIntraExchangeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTransferTypeAccess().getIntraExchangeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ExtraExchange'
			{
				$current = grammarAccess.getTransferTypeAccess().getExtraExchangeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTransferTypeAccess().getExtraExchangeEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule LeverageType
ruleLeverageType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='_1x'
			{
				$current = grammarAccess.getLeverageTypeAccess().get_1xEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLeverageTypeAccess().get_1xEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='_2x'
			{
				$current = grammarAccess.getLeverageTypeAccess().get_2xEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLeverageTypeAccess().get_2xEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='_5x'
			{
				$current = grammarAccess.getLeverageTypeAccess().get_5xEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLeverageTypeAccess().get_5xEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='_10x'
			{
				$current = grammarAccess.getLeverageTypeAccess().get_10xEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLeverageTypeAccess().get_10xEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule OrderType
ruleOrderType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='buy'
			{
				$current = grammarAccess.getOrderTypeAccess().getBuyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOrderTypeAccess().getBuyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='sell'
			{
				$current = grammarAccess.getOrderTypeAccess().getSellEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOrderTypeAccess().getSellEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='leverageLong'
			{
				$current = grammarAccess.getOrderTypeAccess().getLeverageLongEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOrderTypeAccess().getLeverageLongEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='leverageShort'
			{
				$current = grammarAccess.getOrderTypeAccess().getLeverageShortEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOrderTypeAccess().getLeverageShortEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
