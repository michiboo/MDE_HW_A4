/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class CryptoExchangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.cryptoExchange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCryptoExchangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIPKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIPAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIPEStringParserRuleCall_3_1_0 = (RuleCall)cIPAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDomainNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDomainNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDomainNameEStringParserRuleCall_4_1_0 = (RuleCall)cDomainNameAssignment_4_1.eContents().get(0);
		private final Keyword cSubSystemKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSubSystemAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSubSystemSubSystemParserRuleCall_7_0 = (RuleCall)cSubSystemAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cSubSystemAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cSubSystemSubSystemParserRuleCall_8_1_0 = (RuleCall)cSubSystemAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cTokensKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cTokensAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cTokensTokenParserRuleCall_12_0 = (RuleCall)cTokensAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cTokensAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cTokensTokenParserRuleCall_13_1_0 = (RuleCall)cTokensAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cTokenNetworksKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cTokenNetworksAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cTokenNetworksTokenNetworkParserRuleCall_17_0 = (RuleCall)cTokenNetworksAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cTokenNetworksAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cTokenNetworksTokenNetworkParserRuleCall_18_1_0 = (RuleCall)cTokenNetworksAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//cryptoExchange returns cryptoExchange:
		//    'cryptoExchange'
		//    name=EString
		//    '{'
		//        ('IP' IP=EString)?
		//        ('DomainName' DomainName=EString)?
		//        'SubSystem' '{' SubSystem+=SubSystem ( "," SubSystem+=SubSystem)* '}'
		//        'Tokens' '{' Tokens+=Token ( "," Tokens+=Token)* '}'
		//        'TokenNetworks' '{' TokenNetworks+=TokenNetwork ( "," TokenNetworks+=TokenNetwork)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'cryptoExchange'
		//name=EString
		//'{'
		//    ('IP' IP=EString)?
		//    ('DomainName' DomainName=EString)?
		//    'SubSystem' '{' SubSystem+=SubSystem ( "," SubSystem+=SubSystem)* '}'
		//    'Tokens' '{' Tokens+=Token ( "," Tokens+=Token)* '}'
		//    'TokenNetworks' '{' TokenNetworks+=TokenNetwork ( "," TokenNetworks+=TokenNetwork)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'cryptoExchange'
		public Keyword getCryptoExchangeKeyword_0() { return cCryptoExchangeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('IP' IP=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'IP'
		public Keyword getIPKeyword_3_0() { return cIPKeyword_3_0; }
		
		//IP=EString
		public Assignment getIPAssignment_3_1() { return cIPAssignment_3_1; }
		
		//EString
		public RuleCall getIPEStringParserRuleCall_3_1_0() { return cIPEStringParserRuleCall_3_1_0; }
		
		//('DomainName' DomainName=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'DomainName'
		public Keyword getDomainNameKeyword_4_0() { return cDomainNameKeyword_4_0; }
		
		//DomainName=EString
		public Assignment getDomainNameAssignment_4_1() { return cDomainNameAssignment_4_1; }
		
		//EString
		public RuleCall getDomainNameEStringParserRuleCall_4_1_0() { return cDomainNameEStringParserRuleCall_4_1_0; }
		
		//'SubSystem'
		public Keyword getSubSystemKeyword_5() { return cSubSystemKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//SubSystem+=SubSystem
		public Assignment getSubSystemAssignment_7() { return cSubSystemAssignment_7; }
		
		//SubSystem
		public RuleCall getSubSystemSubSystemParserRuleCall_7_0() { return cSubSystemSubSystemParserRuleCall_7_0; }
		
		//( "," SubSystem+=SubSystem)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//SubSystem+=SubSystem
		public Assignment getSubSystemAssignment_8_1() { return cSubSystemAssignment_8_1; }
		
		//SubSystem
		public RuleCall getSubSystemSubSystemParserRuleCall_8_1_0() { return cSubSystemSubSystemParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'Tokens'
		public Keyword getTokensKeyword_10() { return cTokensKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//Tokens+=Token
		public Assignment getTokensAssignment_12() { return cTokensAssignment_12; }
		
		//Token
		public RuleCall getTokensTokenParserRuleCall_12_0() { return cTokensTokenParserRuleCall_12_0; }
		
		//( "," Tokens+=Token)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//Tokens+=Token
		public Assignment getTokensAssignment_13_1() { return cTokensAssignment_13_1; }
		
		//Token
		public RuleCall getTokensTokenParserRuleCall_13_1_0() { return cTokensTokenParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'TokenNetworks'
		public Keyword getTokenNetworksKeyword_15() { return cTokenNetworksKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//TokenNetworks+=TokenNetwork
		public Assignment getTokenNetworksAssignment_17() { return cTokenNetworksAssignment_17; }
		
		//TokenNetwork
		public RuleCall getTokenNetworksTokenNetworkParserRuleCall_17_0() { return cTokenNetworksTokenNetworkParserRuleCall_17_0; }
		
		//( "," TokenNetworks+=TokenNetwork)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//TokenNetworks+=TokenNetwork
		public Assignment getTokenNetworksAssignment_18_1() { return cTokenNetworksAssignment_18_1; }
		
		//TokenNetwork
		public RuleCall getTokenNetworksTokenNetworkParserRuleCall_18_1_0() { return cTokenNetworksTokenNetworkParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class SubSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SubSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSubSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSubSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSubSystemNameEnumRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAccountsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAccountsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAccountsAccountParserRuleCall_4_2_0 = (RuleCall)cAccountsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAccountsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAccountsAccountParserRuleCall_4_3_1_0 = (RuleCall)cAccountsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTokenPairsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTokenPairsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTokenPairsTokenPairParserRuleCall_5_2_0 = (RuleCall)cTokenPairsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cTokenPairsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cTokenPairsTokenPairParserRuleCall_5_3_1_0 = (RuleCall)cTokenPairsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOrdersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cOrdersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cOrdersOrderParserRuleCall_6_2_0 = (RuleCall)cOrdersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cOrdersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cOrdersOrderParserRuleCall_6_3_1_0 = (RuleCall)cOrdersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSavingOrdersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cSavingOrdersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cSavingOrdersSavingOrderParserRuleCall_7_2_0 = (RuleCall)cSavingOrdersAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cSavingOrdersAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cSavingOrdersSavingOrderParserRuleCall_7_3_1_0 = (RuleCall)cSavingOrdersAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SubSystem returns SubSystem:
		//    {SubSystem}
		//    'SubSystem'
		//    name=SubSystemName
		//    '{'
		//        ('accounts' '{' accounts+=Account ( "," accounts+=Account)* '}' )?
		//        ('TokenPairs' '{' TokenPairs+=TokenPair ( "," TokenPairs+=TokenPair)* '}' )?
		//        ('Orders' '{' Orders+=Order ( "," Orders+=Order)* '}' )?
		//        ('SavingOrders' '{' SavingOrders+=SavingOrder ( "," SavingOrders+=SavingOrder)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SubSystem}
		//'SubSystem'
		//name=SubSystemName
		//'{'
		//    ('accounts' '{' accounts+=Account ( "," accounts+=Account)* '}' )?
		//    ('TokenPairs' '{' TokenPairs+=TokenPair ( "," TokenPairs+=TokenPair)* '}' )?
		//    ('Orders' '{' Orders+=Order ( "," Orders+=Order)* '}' )?
		//    ('SavingOrders' '{' SavingOrders+=SavingOrder ( "," SavingOrders+=SavingOrder)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SubSystem}
		public Action getSubSystemAction_0() { return cSubSystemAction_0; }
		
		//'SubSystem'
		public Keyword getSubSystemKeyword_1() { return cSubSystemKeyword_1; }
		
		//name=SubSystemName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//SubSystemName
		public RuleCall getNameSubSystemNameEnumRuleCall_2_0() { return cNameSubSystemNameEnumRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('accounts' '{' accounts+=Account ( "," accounts+=Account)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'accounts'
		public Keyword getAccountsKeyword_4_0() { return cAccountsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//accounts+=Account
		public Assignment getAccountsAssignment_4_2() { return cAccountsAssignment_4_2; }
		
		//Account
		public RuleCall getAccountsAccountParserRuleCall_4_2_0() { return cAccountsAccountParserRuleCall_4_2_0; }
		
		//( "," accounts+=Account)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//accounts+=Account
		public Assignment getAccountsAssignment_4_3_1() { return cAccountsAssignment_4_3_1; }
		
		//Account
		public RuleCall getAccountsAccountParserRuleCall_4_3_1_0() { return cAccountsAccountParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('TokenPairs' '{' TokenPairs+=TokenPair ( "," TokenPairs+=TokenPair)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'TokenPairs'
		public Keyword getTokenPairsKeyword_5_0() { return cTokenPairsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//TokenPairs+=TokenPair
		public Assignment getTokenPairsAssignment_5_2() { return cTokenPairsAssignment_5_2; }
		
		//TokenPair
		public RuleCall getTokenPairsTokenPairParserRuleCall_5_2_0() { return cTokenPairsTokenPairParserRuleCall_5_2_0; }
		
		//( "," TokenPairs+=TokenPair)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//TokenPairs+=TokenPair
		public Assignment getTokenPairsAssignment_5_3_1() { return cTokenPairsAssignment_5_3_1; }
		
		//TokenPair
		public RuleCall getTokenPairsTokenPairParserRuleCall_5_3_1_0() { return cTokenPairsTokenPairParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('Orders' '{' Orders+=Order ( "," Orders+=Order)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Orders'
		public Keyword getOrdersKeyword_6_0() { return cOrdersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//Orders+=Order
		public Assignment getOrdersAssignment_6_2() { return cOrdersAssignment_6_2; }
		
		//Order
		public RuleCall getOrdersOrderParserRuleCall_6_2_0() { return cOrdersOrderParserRuleCall_6_2_0; }
		
		//( "," Orders+=Order)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//Orders+=Order
		public Assignment getOrdersAssignment_6_3_1() { return cOrdersAssignment_6_3_1; }
		
		//Order
		public RuleCall getOrdersOrderParserRuleCall_6_3_1_0() { return cOrdersOrderParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('SavingOrders' '{' SavingOrders+=SavingOrder ( "," SavingOrders+=SavingOrder)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'SavingOrders'
		public Keyword getSavingOrdersKeyword_7_0() { return cSavingOrdersKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//SavingOrders+=SavingOrder
		public Assignment getSavingOrdersAssignment_7_2() { return cSavingOrdersAssignment_7_2; }
		
		//SavingOrder
		public RuleCall getSavingOrdersSavingOrderParserRuleCall_7_2_0() { return cSavingOrdersSavingOrderParserRuleCall_7_2_0; }
		
		//( "," SavingOrders+=SavingOrder)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//SavingOrders+=SavingOrder
		public Assignment getSavingOrdersAssignment_7_3_1() { return cSavingOrdersAssignment_7_3_1; }
		
		//SavingOrder
		public RuleCall getSavingOrdersSavingOrderParserRuleCall_7_3_1_0() { return cSavingOrdersSavingOrderParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Token");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTokenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAddressKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAddressAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAddressEStringParserRuleCall_3_1_0 = (RuleCall)cAddressAssignment_3_1.eContents().get(0);
		private final Keyword cDecimalKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDecimalAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDecimalEIntParserRuleCall_5_0 = (RuleCall)cDecimalAssignment_5.eContents().get(0);
		private final Keyword cTokenNetworkKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTokenNetworkAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTokenNetworkTokenNetworkCrossReference_7_0 = (CrossReference)cTokenNetworkAssignment_7.eContents().get(0);
		private final RuleCall cTokenNetworkTokenNetworkEStringParserRuleCall_7_0_1 = (RuleCall)cTokenNetworkTokenNetworkCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Token returns Token:
		//    'Token'
		//    name=EString
		//    '{'
		//        ('address' address=EString)?
		//        'decimal' decimal=EInt
		//        'TokenNetwork' TokenNetwork=[TokenNetwork|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Token'
		//name=EString
		//'{'
		//    ('address' address=EString)?
		//    'decimal' decimal=EInt
		//    'TokenNetwork' TokenNetwork=[TokenNetwork|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Token'
		public Keyword getTokenKeyword_0() { return cTokenKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('address' address=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'address'
		public Keyword getAddressKeyword_3_0() { return cAddressKeyword_3_0; }
		
		//address=EString
		public Assignment getAddressAssignment_3_1() { return cAddressAssignment_3_1; }
		
		//EString
		public RuleCall getAddressEStringParserRuleCall_3_1_0() { return cAddressEStringParserRuleCall_3_1_0; }
		
		//'decimal'
		public Keyword getDecimalKeyword_4() { return cDecimalKeyword_4; }
		
		//decimal=EInt
		public Assignment getDecimalAssignment_5() { return cDecimalAssignment_5; }
		
		//EInt
		public RuleCall getDecimalEIntParserRuleCall_5_0() { return cDecimalEIntParserRuleCall_5_0; }
		
		//'TokenNetwork'
		public Keyword getTokenNetworkKeyword_6() { return cTokenNetworkKeyword_6; }
		
		//TokenNetwork=[TokenNetwork|EString]
		public Assignment getTokenNetworkAssignment_7() { return cTokenNetworkAssignment_7; }
		
		//[TokenNetwork|EString]
		public CrossReference getTokenNetworkTokenNetworkCrossReference_7_0() { return cTokenNetworkTokenNetworkCrossReference_7_0; }
		
		//EString
		public RuleCall getTokenNetworkTokenNetworkEStringParserRuleCall_7_0_1() { return cTokenNetworkTokenNetworkEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TokenNetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TokenNetwork");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTokenNetworkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cChainIDKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cChainIDAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cChainIDEIntParserRuleCall_4_0 = (RuleCall)cChainIDAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRPCKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRPCAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRPCEStringParserRuleCall_5_1_0 = (RuleCall)cRPCAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TokenNetwork returns TokenNetwork:
		//    'TokenNetwork'
		//    name=EString
		//    '{'
		//        'chainID' chainID=EInt
		//        ('RPC' RPC=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TokenNetwork'
		//name=EString
		//'{'
		//    'chainID' chainID=EInt
		//    ('RPC' RPC=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TokenNetwork'
		public Keyword getTokenNetworkKeyword_0() { return cTokenNetworkKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'chainID'
		public Keyword getChainIDKeyword_3() { return cChainIDKeyword_3; }
		
		//chainID=EInt
		public Assignment getChainIDAssignment_4() { return cChainIDAssignment_4; }
		
		//EInt
		public RuleCall getChainIDEIntParserRuleCall_4_0() { return cChainIDEIntParserRuleCall_4_0; }
		
		//('RPC' RPC=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'RPC'
		public Keyword getRPCKeyword_5_0() { return cRPCKeyword_5_0; }
		
		//RPC=EString
		public Assignment getRPCAssignment_5_1() { return cRPCAssignment_5_1; }
		
		//EString
		public RuleCall getRPCEStringParserRuleCall_5_1_0() { return cRPCEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class AccountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Account");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAccountAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAccountKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTokensBalanceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTokensBalanceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTokensBalanceTokenBalanceParserRuleCall_3_2_0 = (RuleCall)cTokensBalanceAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cTokensBalanceAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cTokensBalanceTokenBalanceParserRuleCall_3_3_1_0 = (RuleCall)cTokensBalanceAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTransferRequestKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTransferRequestAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTransferRequestTransferRequestParserRuleCall_4_2_0 = (RuleCall)cTransferRequestAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTransferRequestAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTransferRequestTransferRequestParserRuleCall_4_3_1_0 = (RuleCall)cTransferRequestAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Account returns Account:
		//    {Account}
		//    'Account'
		//    '{'
		//        ('TokensBalance' '{' TokensBalance+=TokenBalance ( "," TokensBalance+=TokenBalance)* '}' )?
		//        ('transferRequest' '{' transferRequest+=TransferRequest ( "," transferRequest+=TransferRequest)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Account}
		//'Account'
		//'{'
		//    ('TokensBalance' '{' TokensBalance+=TokenBalance ( "," TokensBalance+=TokenBalance)* '}' )?
		//    ('transferRequest' '{' transferRequest+=TransferRequest ( "," transferRequest+=TransferRequest)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Account}
		public Action getAccountAction_0() { return cAccountAction_0; }
		
		//'Account'
		public Keyword getAccountKeyword_1() { return cAccountKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('TokensBalance' '{' TokensBalance+=TokenBalance ( "," TokensBalance+=TokenBalance)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'TokensBalance'
		public Keyword getTokensBalanceKeyword_3_0() { return cTokensBalanceKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//TokensBalance+=TokenBalance
		public Assignment getTokensBalanceAssignment_3_2() { return cTokensBalanceAssignment_3_2; }
		
		//TokenBalance
		public RuleCall getTokensBalanceTokenBalanceParserRuleCall_3_2_0() { return cTokensBalanceTokenBalanceParserRuleCall_3_2_0; }
		
		//( "," TokensBalance+=TokenBalance)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//TokensBalance+=TokenBalance
		public Assignment getTokensBalanceAssignment_3_3_1() { return cTokensBalanceAssignment_3_3_1; }
		
		//TokenBalance
		public RuleCall getTokensBalanceTokenBalanceParserRuleCall_3_3_1_0() { return cTokensBalanceTokenBalanceParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('transferRequest' '{' transferRequest+=TransferRequest ( "," transferRequest+=TransferRequest)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'transferRequest'
		public Keyword getTransferRequestKeyword_4_0() { return cTransferRequestKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//transferRequest+=TransferRequest
		public Assignment getTransferRequestAssignment_4_2() { return cTransferRequestAssignment_4_2; }
		
		//TransferRequest
		public RuleCall getTransferRequestTransferRequestParserRuleCall_4_2_0() { return cTransferRequestTransferRequestParserRuleCall_4_2_0; }
		
		//( "," transferRequest+=TransferRequest)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//transferRequest+=TransferRequest
		public Assignment getTransferRequestAssignment_4_3_1() { return cTransferRequestAssignment_4_3_1; }
		
		//TransferRequest
		public RuleCall getTransferRequestTransferRequestParserRuleCall_4_3_1_0() { return cTransferRequestTransferRequestParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TokenPairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TokenPair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTokenPairKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPriceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPriceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPriceEFloatParserRuleCall_3_0 = (RuleCall)cPriceAssignment_3.eContents().get(0);
		private final Keyword cTokenAKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTokenAAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTokenATokenCrossReference_5_0 = (CrossReference)cTokenAAssignment_5.eContents().get(0);
		private final RuleCall cTokenATokenEStringParserRuleCall_5_0_1 = (RuleCall)cTokenATokenCrossReference_5_0.eContents().get(1);
		private final Keyword cTokenBKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTokenBAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTokenBTokenCrossReference_7_0 = (CrossReference)cTokenBAssignment_7.eContents().get(0);
		private final RuleCall cTokenBTokenEStringParserRuleCall_7_0_1 = (RuleCall)cTokenBTokenCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//TokenPair returns TokenPair:
		//    'TokenPair'
		//    '{'
		//        'price' price=EFloat
		//        'TokenA' TokenA=[Token|EString]
		//        'TokenB' TokenB=[Token|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TokenPair'
		//'{'
		//    'price' price=EFloat
		//    'TokenA' TokenA=[Token|EString]
		//    'TokenB' TokenB=[Token|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TokenPair'
		public Keyword getTokenPairKeyword_0() { return cTokenPairKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'price'
		public Keyword getPriceKeyword_2() { return cPriceKeyword_2; }
		
		//price=EFloat
		public Assignment getPriceAssignment_3() { return cPriceAssignment_3; }
		
		//EFloat
		public RuleCall getPriceEFloatParserRuleCall_3_0() { return cPriceEFloatParserRuleCall_3_0; }
		
		//'TokenA'
		public Keyword getTokenAKeyword_4() { return cTokenAKeyword_4; }
		
		//TokenA=[Token|EString]
		public Assignment getTokenAAssignment_5() { return cTokenAAssignment_5; }
		
		//[Token|EString]
		public CrossReference getTokenATokenCrossReference_5_0() { return cTokenATokenCrossReference_5_0; }
		
		//EString
		public RuleCall getTokenATokenEStringParserRuleCall_5_0_1() { return cTokenATokenEStringParserRuleCall_5_0_1; }
		
		//'TokenB'
		public Keyword getTokenBKeyword_6() { return cTokenBKeyword_6; }
		
		//TokenB=[Token|EString]
		public Assignment getTokenBAssignment_7() { return cTokenBAssignment_7; }
		
		//[Token|EString]
		public CrossReference getTokenBTokenCrossReference_7_0() { return cTokenBTokenCrossReference_7_0; }
		
		//EString
		public RuleCall getTokenBTokenEStringParserRuleCall_7_0_1() { return cTokenBTokenEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class OrderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Order");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPriceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPriceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPriceEFloatParserRuleCall_3_0 = (RuleCall)cPriceAssignment_3.eContents().get(0);
		private final Keyword cAmountKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAmountAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAmountEFloatParserRuleCall_5_0 = (RuleCall)cAmountAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeverageKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cLeverageAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cLeverageLeverageTypeEnumRuleCall_6_1_0 = (RuleCall)cLeverageAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTypeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTypeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTypeOrderTypeEnumRuleCall_7_1_0 = (RuleCall)cTypeAssignment_7_1.eContents().get(0);
		private final Keyword cAccountKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAccountAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cAccountAccountCrossReference_9_0 = (CrossReference)cAccountAssignment_9.eContents().get(0);
		private final RuleCall cAccountAccountEStringParserRuleCall_9_0_1 = (RuleCall)cAccountAccountCrossReference_9_0.eContents().get(1);
		private final Keyword cTokenPairKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTokenPairAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cTokenPairTokenPairCrossReference_11_0 = (CrossReference)cTokenPairAssignment_11.eContents().get(0);
		private final RuleCall cTokenPairTokenPairEStringParserRuleCall_11_0_1 = (RuleCall)cTokenPairTokenPairCrossReference_11_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Order returns Order:
		//    'Order'
		//    '{'
		//        'Price' Price=EFloat
		//        'Amount' Amount=EFloat
		//        ('leverage' leverage=LeverageType)?
		//        ('Type' Type=OrderType)?
		//        'account' account=[Account|EString]
		//        'TokenPair' TokenPair=[TokenPair|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Order'
		//'{'
		//    'Price' Price=EFloat
		//    'Amount' Amount=EFloat
		//    ('leverage' leverage=LeverageType)?
		//    ('Type' Type=OrderType)?
		//    'account' account=[Account|EString]
		//    'TokenPair' TokenPair=[TokenPair|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Order'
		public Keyword getOrderKeyword_0() { return cOrderKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Price'
		public Keyword getPriceKeyword_2() { return cPriceKeyword_2; }
		
		//Price=EFloat
		public Assignment getPriceAssignment_3() { return cPriceAssignment_3; }
		
		//EFloat
		public RuleCall getPriceEFloatParserRuleCall_3_0() { return cPriceEFloatParserRuleCall_3_0; }
		
		//'Amount'
		public Keyword getAmountKeyword_4() { return cAmountKeyword_4; }
		
		//Amount=EFloat
		public Assignment getAmountAssignment_5() { return cAmountAssignment_5; }
		
		//EFloat
		public RuleCall getAmountEFloatParserRuleCall_5_0() { return cAmountEFloatParserRuleCall_5_0; }
		
		//('leverage' leverage=LeverageType)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'leverage'
		public Keyword getLeverageKeyword_6_0() { return cLeverageKeyword_6_0; }
		
		//leverage=LeverageType
		public Assignment getLeverageAssignment_6_1() { return cLeverageAssignment_6_1; }
		
		//LeverageType
		public RuleCall getLeverageLeverageTypeEnumRuleCall_6_1_0() { return cLeverageLeverageTypeEnumRuleCall_6_1_0; }
		
		//('Type' Type=OrderType)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Type'
		public Keyword getTypeKeyword_7_0() { return cTypeKeyword_7_0; }
		
		//Type=OrderType
		public Assignment getTypeAssignment_7_1() { return cTypeAssignment_7_1; }
		
		//OrderType
		public RuleCall getTypeOrderTypeEnumRuleCall_7_1_0() { return cTypeOrderTypeEnumRuleCall_7_1_0; }
		
		//'account'
		public Keyword getAccountKeyword_8() { return cAccountKeyword_8; }
		
		//account=[Account|EString]
		public Assignment getAccountAssignment_9() { return cAccountAssignment_9; }
		
		//[Account|EString]
		public CrossReference getAccountAccountCrossReference_9_0() { return cAccountAccountCrossReference_9_0; }
		
		//EString
		public RuleCall getAccountAccountEStringParserRuleCall_9_0_1() { return cAccountAccountEStringParserRuleCall_9_0_1; }
		
		//'TokenPair'
		public Keyword getTokenPairKeyword_10() { return cTokenPairKeyword_10; }
		
		//TokenPair=[TokenPair|EString]
		public Assignment getTokenPairAssignment_11() { return cTokenPairAssignment_11; }
		
		//[TokenPair|EString]
		public CrossReference getTokenPairTokenPairCrossReference_11_0() { return cTokenPairTokenPairCrossReference_11_0; }
		
		//EString
		public RuleCall getTokenPairTokenPairEStringParserRuleCall_11_0_1() { return cTokenPairTokenPairEStringParserRuleCall_11_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SavingOrderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SavingOrder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSavingOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAmountKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAmountAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAmountEFloatParserRuleCall_4_0 = (RuleCall)cAmountAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMatureDateKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMatureDateAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMatureDateEDateParserRuleCall_5_1_0 = (RuleCall)cMatureDateAssignment_5_1.eContents().get(0);
		private final Keyword cInterestKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInterestAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cInterestEDoubleParserRuleCall_7_0 = (RuleCall)cInterestAssignment_7.eContents().get(0);
		private final Keyword cAccountKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAccountAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cAccountAccountCrossReference_9_0 = (CrossReference)cAccountAssignment_9.eContents().get(0);
		private final RuleCall cAccountAccountEStringParserRuleCall_9_0_1 = (RuleCall)cAccountAccountCrossReference_9_0.eContents().get(1);
		private final Keyword cTokenKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTokenAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cTokenTokenCrossReference_11_0 = (CrossReference)cTokenAssignment_11.eContents().get(0);
		private final RuleCall cTokenTokenEStringParserRuleCall_11_0_1 = (RuleCall)cTokenTokenCrossReference_11_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SavingOrder returns SavingOrder:
		//    'SavingOrder'
		//    name=EString
		//    '{'
		//        'Amount' Amount=EFloat
		//        ('MatureDate' MatureDate=EDate)?
		//        'Interest' Interest=EDouble
		//        'account' account=[Account|EString]
		//        'Token' Token=[Token|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SavingOrder'
		//name=EString
		//'{'
		//    'Amount' Amount=EFloat
		//    ('MatureDate' MatureDate=EDate)?
		//    'Interest' Interest=EDouble
		//    'account' account=[Account|EString]
		//    'Token' Token=[Token|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SavingOrder'
		public Keyword getSavingOrderKeyword_0() { return cSavingOrderKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Amount'
		public Keyword getAmountKeyword_3() { return cAmountKeyword_3; }
		
		//Amount=EFloat
		public Assignment getAmountAssignment_4() { return cAmountAssignment_4; }
		
		//EFloat
		public RuleCall getAmountEFloatParserRuleCall_4_0() { return cAmountEFloatParserRuleCall_4_0; }
		
		//('MatureDate' MatureDate=EDate)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'MatureDate'
		public Keyword getMatureDateKeyword_5_0() { return cMatureDateKeyword_5_0; }
		
		//MatureDate=EDate
		public Assignment getMatureDateAssignment_5_1() { return cMatureDateAssignment_5_1; }
		
		//EDate
		public RuleCall getMatureDateEDateParserRuleCall_5_1_0() { return cMatureDateEDateParserRuleCall_5_1_0; }
		
		//'Interest'
		public Keyword getInterestKeyword_6() { return cInterestKeyword_6; }
		
		//Interest=EDouble
		public Assignment getInterestAssignment_7() { return cInterestAssignment_7; }
		
		//EDouble
		public RuleCall getInterestEDoubleParserRuleCall_7_0() { return cInterestEDoubleParserRuleCall_7_0; }
		
		//'account'
		public Keyword getAccountKeyword_8() { return cAccountKeyword_8; }
		
		//account=[Account|EString]
		public Assignment getAccountAssignment_9() { return cAccountAssignment_9; }
		
		//[Account|EString]
		public CrossReference getAccountAccountCrossReference_9_0() { return cAccountAccountCrossReference_9_0; }
		
		//EString
		public RuleCall getAccountAccountEStringParserRuleCall_9_0_1() { return cAccountAccountEStringParserRuleCall_9_0_1; }
		
		//'Token'
		public Keyword getTokenKeyword_10() { return cTokenKeyword_10; }
		
		//Token=[Token|EString]
		public Assignment getTokenAssignment_11() { return cTokenAssignment_11; }
		
		//[Token|EString]
		public CrossReference getTokenTokenCrossReference_11_0() { return cTokenTokenCrossReference_11_0; }
		
		//EString
		public RuleCall getTokenTokenEStringParserRuleCall_11_0_1() { return cTokenTokenEStringParserRuleCall_11_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class TokenBalanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TokenBalance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTokenBalanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cBalanceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBalanceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBalanceEFloatParserRuleCall_4_0 = (RuleCall)cBalanceAssignment_4.eContents().get(0);
		private final Keyword cTokenKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTokenAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTokenTokenCrossReference_6_0 = (CrossReference)cTokenAssignment_6.eContents().get(0);
		private final RuleCall cTokenTokenEStringParserRuleCall_6_0_1 = (RuleCall)cTokenTokenCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TokenBalance returns TokenBalance:
		//    'TokenBalance'
		//    name=EString
		//    '{'
		//        'balance' balance=EFloat
		//        'Token' Token=[Token|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TokenBalance'
		//name=EString
		//'{'
		//    'balance' balance=EFloat
		//    'Token' Token=[Token|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TokenBalance'
		public Keyword getTokenBalanceKeyword_0() { return cTokenBalanceKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'balance'
		public Keyword getBalanceKeyword_3() { return cBalanceKeyword_3; }
		
		//balance=EFloat
		public Assignment getBalanceAssignment_4() { return cBalanceAssignment_4; }
		
		//EFloat
		public RuleCall getBalanceEFloatParserRuleCall_4_0() { return cBalanceEFloatParserRuleCall_4_0; }
		
		//'Token'
		public Keyword getTokenKeyword_5() { return cTokenKeyword_5; }
		
		//Token=[Token|EString]
		public Assignment getTokenAssignment_6() { return cTokenAssignment_6; }
		
		//[Token|EString]
		public CrossReference getTokenTokenCrossReference_6_0() { return cTokenTokenCrossReference_6_0; }
		
		//EString
		public RuleCall getTokenTokenEStringParserRuleCall_6_0_1() { return cTokenTokenEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class TransferRequestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TransferRequest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransferRequestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIDAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIDEStringParserRuleCall_1_0 = (RuleCall)cIDAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTransferTypeEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cAmountKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAmountAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAmountEFloatParserRuleCall_5_0 = (RuleCall)cAmountAssignment_5.eContents().get(0);
		private final Keyword cTokenKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTokenAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTokenTokenCrossReference_7_0 = (CrossReference)cTokenAssignment_7.eContents().get(0);
		private final RuleCall cTokenTokenEStringParserRuleCall_7_0_1 = (RuleCall)cTokenTokenCrossReference_7_0.eContents().get(1);
		private final Keyword cDestinationKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDestinationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cDestinationAccountCrossReference_9_0 = (CrossReference)cDestinationAssignment_9.eContents().get(0);
		private final RuleCall cDestinationAccountEStringParserRuleCall_9_0_1 = (RuleCall)cDestinationAccountCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//TransferRequest returns TransferRequest:
		//    'TransferRequest'
		//    ID=EString
		//    '{'
		//        ('type' type=TransferType)?
		//        'amount' amount=EFloat
		//        'Token' Token=[Token|EString]
		//        'Destination' Destination=[Account|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TransferRequest'
		//ID=EString
		//'{'
		//    ('type' type=TransferType)?
		//    'amount' amount=EFloat
		//    'Token' Token=[Token|EString]
		//    'Destination' Destination=[Account|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TransferRequest'
		public Keyword getTransferRequestKeyword_0() { return cTransferRequestKeyword_0; }
		
		//ID=EString
		public Assignment getIDAssignment_1() { return cIDAssignment_1; }
		
		//EString
		public RuleCall getIDEStringParserRuleCall_1_0() { return cIDEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=TransferType)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=TransferType
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//TransferType
		public RuleCall getTypeTransferTypeEnumRuleCall_3_1_0() { return cTypeTransferTypeEnumRuleCall_3_1_0; }
		
		//'amount'
		public Keyword getAmountKeyword_4() { return cAmountKeyword_4; }
		
		//amount=EFloat
		public Assignment getAmountAssignment_5() { return cAmountAssignment_5; }
		
		//EFloat
		public RuleCall getAmountEFloatParserRuleCall_5_0() { return cAmountEFloatParserRuleCall_5_0; }
		
		//'Token'
		public Keyword getTokenKeyword_6() { return cTokenKeyword_6; }
		
		//Token=[Token|EString]
		public Assignment getTokenAssignment_7() { return cTokenAssignment_7; }
		
		//[Token|EString]
		public CrossReference getTokenTokenCrossReference_7_0() { return cTokenTokenCrossReference_7_0; }
		
		//EString
		public RuleCall getTokenTokenEStringParserRuleCall_7_0_1() { return cTokenTokenEStringParserRuleCall_7_0_1; }
		
		//'Destination'
		public Keyword getDestinationKeyword_8() { return cDestinationKeyword_8; }
		
		//Destination=[Account|EString]
		public Assignment getDestinationAssignment_9() { return cDestinationAssignment_9; }
		
		//[Account|EString]
		public CrossReference getDestinationAccountCrossReference_9_0() { return cDestinationAccountCrossReference_9_0; }
		
		//EString
		public RuleCall getDestinationAccountEStringParserRuleCall_9_0_1() { return cDestinationAccountEStringParserRuleCall_9_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class EFloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EFloat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EFloat returns ecore::EFloat:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	public class SubSystemNameElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SubSystemName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSpotEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSpotSpotKeyword_0_0 = (Keyword)cSpotEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFutureEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFutureFutureKeyword_1_0 = (Keyword)cFutureEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMarginEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMarginMarginKeyword_2_0 = (Keyword)cMarginEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSavingEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSavingSavingKeyword_3_0 = (Keyword)cSavingEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum SubSystemName returns SubSystemName:
		//                Spot = 'Spot' | Future = 'Future' | Margin = 'Margin' | Saving = 'Saving';
		public EnumRule getRule() { return rule; }
		
		//Spot = 'Spot' | Future = 'Future' | Margin = 'Margin' | Saving = 'Saving'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Spot = 'Spot'
		public EnumLiteralDeclaration getSpotEnumLiteralDeclaration_0() { return cSpotEnumLiteralDeclaration_0; }
		
		//'Spot'
		public Keyword getSpotSpotKeyword_0_0() { return cSpotSpotKeyword_0_0; }
		
		//Future = 'Future'
		public EnumLiteralDeclaration getFutureEnumLiteralDeclaration_1() { return cFutureEnumLiteralDeclaration_1; }
		
		//'Future'
		public Keyword getFutureFutureKeyword_1_0() { return cFutureFutureKeyword_1_0; }
		
		//Margin = 'Margin'
		public EnumLiteralDeclaration getMarginEnumLiteralDeclaration_2() { return cMarginEnumLiteralDeclaration_2; }
		
		//'Margin'
		public Keyword getMarginMarginKeyword_2_0() { return cMarginMarginKeyword_2_0; }
		
		//Saving = 'Saving'
		public EnumLiteralDeclaration getSavingEnumLiteralDeclaration_3() { return cSavingEnumLiteralDeclaration_3; }
		
		//'Saving'
		public Keyword getSavingSavingKeyword_3_0() { return cSavingSavingKeyword_3_0; }
	}
	public class TransferTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TransferType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIntraExchangeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIntraExchangeIntraExchangeKeyword_0_0 = (Keyword)cIntraExchangeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cExtraExchangeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cExtraExchangeExtraExchangeKeyword_1_0 = (Keyword)cExtraExchangeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TransferType returns TransferType:
		//                IntraExchange = 'IntraExchange' | ExtraExchange = 'ExtraExchange';
		public EnumRule getRule() { return rule; }
		
		//IntraExchange = 'IntraExchange' | ExtraExchange = 'ExtraExchange'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntraExchange = 'IntraExchange'
		public EnumLiteralDeclaration getIntraExchangeEnumLiteralDeclaration_0() { return cIntraExchangeEnumLiteralDeclaration_0; }
		
		//'IntraExchange'
		public Keyword getIntraExchangeIntraExchangeKeyword_0_0() { return cIntraExchangeIntraExchangeKeyword_0_0; }
		
		//ExtraExchange = 'ExtraExchange'
		public EnumLiteralDeclaration getExtraExchangeEnumLiteralDeclaration_1() { return cExtraExchangeEnumLiteralDeclaration_1; }
		
		//'ExtraExchange'
		public Keyword getExtraExchangeExtraExchangeKeyword_1_0() { return cExtraExchangeExtraExchangeKeyword_1_0; }
	}
	public class LeverageTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LeverageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration c_1xEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword c_1x_1xKeyword_0_0 = (Keyword)c_1xEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration c_2xEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword c_2x_2xKeyword_1_0 = (Keyword)c_2xEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration c_5xEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword c_5x_5xKeyword_2_0 = (Keyword)c_5xEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration c_10xEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword c_10x_10xKeyword_3_0 = (Keyword)c_10xEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum LeverageType returns LeverageType:
		//                _1x = '_1x' | _2x = '_2x' | _5x = '_5x' | _10x = '_10x';
		public EnumRule getRule() { return rule; }
		
		//_1x = '_1x' | _2x = '_2x' | _5x = '_5x' | _10x = '_10x'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//_1x = '_1x'
		public EnumLiteralDeclaration get_1xEnumLiteralDeclaration_0() { return c_1xEnumLiteralDeclaration_0; }
		
		//'_1x'
		public Keyword get_1x_1xKeyword_0_0() { return c_1x_1xKeyword_0_0; }
		
		//_2x = '_2x'
		public EnumLiteralDeclaration get_2xEnumLiteralDeclaration_1() { return c_2xEnumLiteralDeclaration_1; }
		
		//'_2x'
		public Keyword get_2x_2xKeyword_1_0() { return c_2x_2xKeyword_1_0; }
		
		//_5x = '_5x'
		public EnumLiteralDeclaration get_5xEnumLiteralDeclaration_2() { return c_5xEnumLiteralDeclaration_2; }
		
		//'_5x'
		public Keyword get_5x_5xKeyword_2_0() { return c_5x_5xKeyword_2_0; }
		
		//_10x = '_10x'
		public EnumLiteralDeclaration get_10xEnumLiteralDeclaration_3() { return c_10xEnumLiteralDeclaration_3; }
		
		//'_10x'
		public Keyword get_10x_10xKeyword_3_0() { return c_10x_10xKeyword_3_0; }
	}
	public class OrderTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.OrderType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBuyEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBuyBuyKeyword_0_0 = (Keyword)cBuyEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSellEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSellSellKeyword_1_0 = (Keyword)cSellEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLeverageLongEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLeverageLongLeverageLongKeyword_2_0 = (Keyword)cLeverageLongEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLeverageShortEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLeverageShortLeverageShortKeyword_3_0 = (Keyword)cLeverageShortEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum OrderType returns OrderType:
		//                buy = 'buy' | sell = 'sell' | leverageLong = 'leverageLong' | leverageShort = 'leverageShort';
		public EnumRule getRule() { return rule; }
		
		//buy = 'buy' | sell = 'sell' | leverageLong = 'leverageLong' | leverageShort = 'leverageShort'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//buy = 'buy'
		public EnumLiteralDeclaration getBuyEnumLiteralDeclaration_0() { return cBuyEnumLiteralDeclaration_0; }
		
		//'buy'
		public Keyword getBuyBuyKeyword_0_0() { return cBuyBuyKeyword_0_0; }
		
		//sell = 'sell'
		public EnumLiteralDeclaration getSellEnumLiteralDeclaration_1() { return cSellEnumLiteralDeclaration_1; }
		
		//'sell'
		public Keyword getSellSellKeyword_1_0() { return cSellSellKeyword_1_0; }
		
		//leverageLong = 'leverageLong'
		public EnumLiteralDeclaration getLeverageLongEnumLiteralDeclaration_2() { return cLeverageLongEnumLiteralDeclaration_2; }
		
		//'leverageLong'
		public Keyword getLeverageLongLeverageLongKeyword_2_0() { return cLeverageLongLeverageLongKeyword_2_0; }
		
		//leverageShort = 'leverageShort'
		public EnumLiteralDeclaration getLeverageShortEnumLiteralDeclaration_3() { return cLeverageShortEnumLiteralDeclaration_3; }
		
		//'leverageShort'
		public Keyword getLeverageShortLeverageShortKeyword_3_0() { return cLeverageShortLeverageShortKeyword_3_0; }
	}
	
	private final CryptoExchangeElements pCryptoExchange;
	private final EStringElements pEString;
	private final SubSystemElements pSubSystem;
	private final TokenElements pToken;
	private final TokenNetworkElements pTokenNetwork;
	private final SubSystemNameElements eSubSystemName;
	private final AccountElements pAccount;
	private final TokenPairElements pTokenPair;
	private final OrderElements pOrder;
	private final SavingOrderElements pSavingOrder;
	private final TokenBalanceElements pTokenBalance;
	private final TransferRequestElements pTransferRequest;
	private final EFloatElements pEFloat;
	private final TransferTypeElements eTransferType;
	private final LeverageTypeElements eLeverageType;
	private final OrderTypeElements eOrderType;
	private final EDateElements pEDate;
	private final EDoubleElements pEDouble;
	private final EIntElements pEInt;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCryptoExchange = new CryptoExchangeElements();
		this.pEString = new EStringElements();
		this.pSubSystem = new SubSystemElements();
		this.pToken = new TokenElements();
		this.pTokenNetwork = new TokenNetworkElements();
		this.eSubSystemName = new SubSystemNameElements();
		this.pAccount = new AccountElements();
		this.pTokenPair = new TokenPairElements();
		this.pOrder = new OrderElements();
		this.pSavingOrder = new SavingOrderElements();
		this.pTokenBalance = new TokenBalanceElements();
		this.pTransferRequest = new TransferRequestElements();
		this.pEFloat = new EFloatElements();
		this.eTransferType = new TransferTypeElements();
		this.eLeverageType = new LeverageTypeElements();
		this.eOrderType = new OrderTypeElements();
		this.pEDate = new EDateElements();
		this.pEDouble = new EDoubleElements();
		this.pEInt = new EIntElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//cryptoExchange returns cryptoExchange:
	//    'cryptoExchange'
	//    name=EString
	//    '{'
	//        ('IP' IP=EString)?
	//        ('DomainName' DomainName=EString)?
	//        'SubSystem' '{' SubSystem+=SubSystem ( "," SubSystem+=SubSystem)* '}'
	//        'Tokens' '{' Tokens+=Token ( "," Tokens+=Token)* '}'
	//        'TokenNetworks' '{' TokenNetworks+=TokenNetwork ( "," TokenNetworks+=TokenNetwork)* '}'
	//    '}';
	public CryptoExchangeElements getCryptoExchangeAccess() {
		return pCryptoExchange;
	}
	
	public ParserRule getCryptoExchangeRule() {
		return getCryptoExchangeAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//SubSystem returns SubSystem:
	//    {SubSystem}
	//    'SubSystem'
	//    name=SubSystemName
	//    '{'
	//        ('accounts' '{' accounts+=Account ( "," accounts+=Account)* '}' )?
	//        ('TokenPairs' '{' TokenPairs+=TokenPair ( "," TokenPairs+=TokenPair)* '}' )?
	//        ('Orders' '{' Orders+=Order ( "," Orders+=Order)* '}' )?
	//        ('SavingOrders' '{' SavingOrders+=SavingOrder ( "," SavingOrders+=SavingOrder)* '}' )?
	//    '}';
	public SubSystemElements getSubSystemAccess() {
		return pSubSystem;
	}
	
	public ParserRule getSubSystemRule() {
		return getSubSystemAccess().getRule();
	}
	
	//Token returns Token:
	//    'Token'
	//    name=EString
	//    '{'
	//        ('address' address=EString)?
	//        'decimal' decimal=EInt
	//        'TokenNetwork' TokenNetwork=[TokenNetwork|EString]
	//    '}';
	public TokenElements getTokenAccess() {
		return pToken;
	}
	
	public ParserRule getTokenRule() {
		return getTokenAccess().getRule();
	}
	
	//TokenNetwork returns TokenNetwork:
	//    'TokenNetwork'
	//    name=EString
	//    '{'
	//        'chainID' chainID=EInt
	//        ('RPC' RPC=EString)?
	//    '}';
	public TokenNetworkElements getTokenNetworkAccess() {
		return pTokenNetwork;
	}
	
	public ParserRule getTokenNetworkRule() {
		return getTokenNetworkAccess().getRule();
	}
	
	//enum SubSystemName returns SubSystemName:
	//                Spot = 'Spot' | Future = 'Future' | Margin = 'Margin' | Saving = 'Saving';
	public SubSystemNameElements getSubSystemNameAccess() {
		return eSubSystemName;
	}
	
	public EnumRule getSubSystemNameRule() {
		return getSubSystemNameAccess().getRule();
	}
	
	//Account returns Account:
	//    {Account}
	//    'Account'
	//    '{'
	//        ('TokensBalance' '{' TokensBalance+=TokenBalance ( "," TokensBalance+=TokenBalance)* '}' )?
	//        ('transferRequest' '{' transferRequest+=TransferRequest ( "," transferRequest+=TransferRequest)* '}' )?
	//    '}';
	public AccountElements getAccountAccess() {
		return pAccount;
	}
	
	public ParserRule getAccountRule() {
		return getAccountAccess().getRule();
	}
	
	//TokenPair returns TokenPair:
	//    'TokenPair'
	//    '{'
	//        'price' price=EFloat
	//        'TokenA' TokenA=[Token|EString]
	//        'TokenB' TokenB=[Token|EString]
	//    '}';
	public TokenPairElements getTokenPairAccess() {
		return pTokenPair;
	}
	
	public ParserRule getTokenPairRule() {
		return getTokenPairAccess().getRule();
	}
	
	//Order returns Order:
	//    'Order'
	//    '{'
	//        'Price' Price=EFloat
	//        'Amount' Amount=EFloat
	//        ('leverage' leverage=LeverageType)?
	//        ('Type' Type=OrderType)?
	//        'account' account=[Account|EString]
	//        'TokenPair' TokenPair=[TokenPair|EString]
	//    '}';
	public OrderElements getOrderAccess() {
		return pOrder;
	}
	
	public ParserRule getOrderRule() {
		return getOrderAccess().getRule();
	}
	
	//SavingOrder returns SavingOrder:
	//    'SavingOrder'
	//    name=EString
	//    '{'
	//        'Amount' Amount=EFloat
	//        ('MatureDate' MatureDate=EDate)?
	//        'Interest' Interest=EDouble
	//        'account' account=[Account|EString]
	//        'Token' Token=[Token|EString]
	//    '}';
	public SavingOrderElements getSavingOrderAccess() {
		return pSavingOrder;
	}
	
	public ParserRule getSavingOrderRule() {
		return getSavingOrderAccess().getRule();
	}
	
	//TokenBalance returns TokenBalance:
	//    'TokenBalance'
	//    name=EString
	//    '{'
	//        'balance' balance=EFloat
	//        'Token' Token=[Token|EString]
	//    '}';
	public TokenBalanceElements getTokenBalanceAccess() {
		return pTokenBalance;
	}
	
	public ParserRule getTokenBalanceRule() {
		return getTokenBalanceAccess().getRule();
	}
	
	//TransferRequest returns TransferRequest:
	//    'TransferRequest'
	//    ID=EString
	//    '{'
	//        ('type' type=TransferType)?
	//        'amount' amount=EFloat
	//        'Token' Token=[Token|EString]
	//        'Destination' Destination=[Account|EString]
	//    '}';
	public TransferRequestElements getTransferRequestAccess() {
		return pTransferRequest;
	}
	
	public ParserRule getTransferRequestRule() {
		return getTransferRequestAccess().getRule();
	}
	
	//EFloat returns ecore::EFloat:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EFloatElements getEFloatAccess() {
		return pEFloat;
	}
	
	public ParserRule getEFloatRule() {
		return getEFloatAccess().getRule();
	}
	
	//enum TransferType returns TransferType:
	//                IntraExchange = 'IntraExchange' | ExtraExchange = 'ExtraExchange';
	public TransferTypeElements getTransferTypeAccess() {
		return eTransferType;
	}
	
	public EnumRule getTransferTypeRule() {
		return getTransferTypeAccess().getRule();
	}
	
	//enum LeverageType returns LeverageType:
	//                _1x = '_1x' | _2x = '_2x' | _5x = '_5x' | _10x = '_10x';
	public LeverageTypeElements getLeverageTypeAccess() {
		return eLeverageType;
	}
	
	public EnumRule getLeverageTypeRule() {
		return getLeverageTypeAccess().getRule();
	}
	
	//enum OrderType returns OrderType:
	//                buy = 'buy' | sell = 'sell' | leverageLong = 'leverageLong' | leverageShort = 'leverageShort';
	public OrderTypeElements getOrderTypeAccess() {
		return eOrderType;
	}
	
	public EnumRule getOrderTypeRule() {
		return getOrderTypeAccess().getRule();
	}
	
	//EDate returns ecore::EDate:
	//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
