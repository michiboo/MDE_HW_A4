/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
			builder.put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
			builder.put(grammarAccess.getSubSystemNameAccess().getAlternatives(), "rule__SubSystemName__Alternatives");
			builder.put(grammarAccess.getTransferTypeAccess().getAlternatives(), "rule__TransferType__Alternatives");
			builder.put(grammarAccess.getLeverageTypeAccess().getAlternatives(), "rule__LeverageType__Alternatives");
			builder.put(grammarAccess.getOrderTypeAccess().getAlternatives(), "rule__OrderType__Alternatives");
			builder.put(grammarAccess.getCryptoExchangeAccess().getGroup(), "rule__CryptoExchange__Group__0");
			builder.put(grammarAccess.getCryptoExchangeAccess().getGroup_3(), "rule__CryptoExchange__Group_3__0");
			builder.put(grammarAccess.getCryptoExchangeAccess().getGroup_4(), "rule__CryptoExchange__Group_4__0");
			builder.put(grammarAccess.getCryptoExchangeAccess().getGroup_8(), "rule__CryptoExchange__Group_8__0");
			builder.put(grammarAccess.getCryptoExchangeAccess().getGroup_13(), "rule__CryptoExchange__Group_13__0");
			builder.put(grammarAccess.getCryptoExchangeAccess().getGroup_18(), "rule__CryptoExchange__Group_18__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup(), "rule__SubSystem__Group__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_4(), "rule__SubSystem__Group_4__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_4_3(), "rule__SubSystem__Group_4_3__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_5(), "rule__SubSystem__Group_5__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_5_3(), "rule__SubSystem__Group_5_3__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_6(), "rule__SubSystem__Group_6__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_6_3(), "rule__SubSystem__Group_6_3__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_7(), "rule__SubSystem__Group_7__0");
			builder.put(grammarAccess.getSubSystemAccess().getGroup_7_3(), "rule__SubSystem__Group_7_3__0");
			builder.put(grammarAccess.getTokenAccess().getGroup(), "rule__Token__Group__0");
			builder.put(grammarAccess.getTokenAccess().getGroup_3(), "rule__Token__Group_3__0");
			builder.put(grammarAccess.getTokenNetworkAccess().getGroup(), "rule__TokenNetwork__Group__0");
			builder.put(grammarAccess.getTokenNetworkAccess().getGroup_5(), "rule__TokenNetwork__Group_5__0");
			builder.put(grammarAccess.getAccountAccess().getGroup(), "rule__Account__Group__0");
			builder.put(grammarAccess.getAccountAccess().getGroup_3(), "rule__Account__Group_3__0");
			builder.put(grammarAccess.getAccountAccess().getGroup_3_3(), "rule__Account__Group_3_3__0");
			builder.put(grammarAccess.getAccountAccess().getGroup_4(), "rule__Account__Group_4__0");
			builder.put(grammarAccess.getAccountAccess().getGroup_4_3(), "rule__Account__Group_4_3__0");
			builder.put(grammarAccess.getTokenPairAccess().getGroup(), "rule__TokenPair__Group__0");
			builder.put(grammarAccess.getOrderAccess().getGroup(), "rule__Order__Group__0");
			builder.put(grammarAccess.getOrderAccess().getGroup_6(), "rule__Order__Group_6__0");
			builder.put(grammarAccess.getOrderAccess().getGroup_7(), "rule__Order__Group_7__0");
			builder.put(grammarAccess.getSavingOrderAccess().getGroup(), "rule__SavingOrder__Group__0");
			builder.put(grammarAccess.getSavingOrderAccess().getGroup_5(), "rule__SavingOrder__Group_5__0");
			builder.put(grammarAccess.getTokenBalanceAccess().getGroup(), "rule__TokenBalance__Group__0");
			builder.put(grammarAccess.getTransferRequestAccess().getGroup(), "rule__TransferRequest__Group__0");
			builder.put(grammarAccess.getTransferRequestAccess().getGroup_3(), "rule__TransferRequest__Group_3__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getCryptoExchangeAccess().getNameAssignment_1(), "rule__CryptoExchange__NameAssignment_1");
			builder.put(grammarAccess.getCryptoExchangeAccess().getIPAssignment_3_1(), "rule__CryptoExchange__IPAssignment_3_1");
			builder.put(grammarAccess.getCryptoExchangeAccess().getDomainNameAssignment_4_1(), "rule__CryptoExchange__DomainNameAssignment_4_1");
			builder.put(grammarAccess.getCryptoExchangeAccess().getSubSystemAssignment_7(), "rule__CryptoExchange__SubSystemAssignment_7");
			builder.put(grammarAccess.getCryptoExchangeAccess().getSubSystemAssignment_8_1(), "rule__CryptoExchange__SubSystemAssignment_8_1");
			builder.put(grammarAccess.getCryptoExchangeAccess().getTokensAssignment_12(), "rule__CryptoExchange__TokensAssignment_12");
			builder.put(grammarAccess.getCryptoExchangeAccess().getTokensAssignment_13_1(), "rule__CryptoExchange__TokensAssignment_13_1");
			builder.put(grammarAccess.getCryptoExchangeAccess().getTokenNetworksAssignment_17(), "rule__CryptoExchange__TokenNetworksAssignment_17");
			builder.put(grammarAccess.getCryptoExchangeAccess().getTokenNetworksAssignment_18_1(), "rule__CryptoExchange__TokenNetworksAssignment_18_1");
			builder.put(grammarAccess.getSubSystemAccess().getNameAssignment_2(), "rule__SubSystem__NameAssignment_2");
			builder.put(grammarAccess.getSubSystemAccess().getAccountsAssignment_4_2(), "rule__SubSystem__AccountsAssignment_4_2");
			builder.put(grammarAccess.getSubSystemAccess().getAccountsAssignment_4_3_1(), "rule__SubSystem__AccountsAssignment_4_3_1");
			builder.put(grammarAccess.getSubSystemAccess().getTokenPairsAssignment_5_2(), "rule__SubSystem__TokenPairsAssignment_5_2");
			builder.put(grammarAccess.getSubSystemAccess().getTokenPairsAssignment_5_3_1(), "rule__SubSystem__TokenPairsAssignment_5_3_1");
			builder.put(grammarAccess.getSubSystemAccess().getOrdersAssignment_6_2(), "rule__SubSystem__OrdersAssignment_6_2");
			builder.put(grammarAccess.getSubSystemAccess().getOrdersAssignment_6_3_1(), "rule__SubSystem__OrdersAssignment_6_3_1");
			builder.put(grammarAccess.getSubSystemAccess().getSavingOrdersAssignment_7_2(), "rule__SubSystem__SavingOrdersAssignment_7_2");
			builder.put(grammarAccess.getSubSystemAccess().getSavingOrdersAssignment_7_3_1(), "rule__SubSystem__SavingOrdersAssignment_7_3_1");
			builder.put(grammarAccess.getTokenAccess().getNameAssignment_1(), "rule__Token__NameAssignment_1");
			builder.put(grammarAccess.getTokenAccess().getAddressAssignment_3_1(), "rule__Token__AddressAssignment_3_1");
			builder.put(grammarAccess.getTokenAccess().getDecimalAssignment_5(), "rule__Token__DecimalAssignment_5");
			builder.put(grammarAccess.getTokenAccess().getTokenNetworkAssignment_7(), "rule__Token__TokenNetworkAssignment_7");
			builder.put(grammarAccess.getTokenNetworkAccess().getNameAssignment_1(), "rule__TokenNetwork__NameAssignment_1");
			builder.put(grammarAccess.getTokenNetworkAccess().getChainIDAssignment_4(), "rule__TokenNetwork__ChainIDAssignment_4");
			builder.put(grammarAccess.getTokenNetworkAccess().getRPCAssignment_5_1(), "rule__TokenNetwork__RPCAssignment_5_1");
			builder.put(grammarAccess.getAccountAccess().getTokensBalanceAssignment_3_2(), "rule__Account__TokensBalanceAssignment_3_2");
			builder.put(grammarAccess.getAccountAccess().getTokensBalanceAssignment_3_3_1(), "rule__Account__TokensBalanceAssignment_3_3_1");
			builder.put(grammarAccess.getAccountAccess().getTransferRequestAssignment_4_2(), "rule__Account__TransferRequestAssignment_4_2");
			builder.put(grammarAccess.getAccountAccess().getTransferRequestAssignment_4_3_1(), "rule__Account__TransferRequestAssignment_4_3_1");
			builder.put(grammarAccess.getTokenPairAccess().getPriceAssignment_3(), "rule__TokenPair__PriceAssignment_3");
			builder.put(grammarAccess.getTokenPairAccess().getTokenAAssignment_5(), "rule__TokenPair__TokenAAssignment_5");
			builder.put(grammarAccess.getTokenPairAccess().getTokenBAssignment_7(), "rule__TokenPair__TokenBAssignment_7");
			builder.put(grammarAccess.getOrderAccess().getPriceAssignment_3(), "rule__Order__PriceAssignment_3");
			builder.put(grammarAccess.getOrderAccess().getAmountAssignment_5(), "rule__Order__AmountAssignment_5");
			builder.put(grammarAccess.getOrderAccess().getLeverageAssignment_6_1(), "rule__Order__LeverageAssignment_6_1");
			builder.put(grammarAccess.getOrderAccess().getTypeAssignment_7_1(), "rule__Order__TypeAssignment_7_1");
			builder.put(grammarAccess.getOrderAccess().getAccountAssignment_9(), "rule__Order__AccountAssignment_9");
			builder.put(grammarAccess.getOrderAccess().getTokenPairAssignment_11(), "rule__Order__TokenPairAssignment_11");
			builder.put(grammarAccess.getSavingOrderAccess().getNameAssignment_1(), "rule__SavingOrder__NameAssignment_1");
			builder.put(grammarAccess.getSavingOrderAccess().getAmountAssignment_4(), "rule__SavingOrder__AmountAssignment_4");
			builder.put(grammarAccess.getSavingOrderAccess().getMatureDateAssignment_5_1(), "rule__SavingOrder__MatureDateAssignment_5_1");
			builder.put(grammarAccess.getSavingOrderAccess().getInterestAssignment_7(), "rule__SavingOrder__InterestAssignment_7");
			builder.put(grammarAccess.getSavingOrderAccess().getAccountAssignment_9(), "rule__SavingOrder__AccountAssignment_9");
			builder.put(grammarAccess.getSavingOrderAccess().getTokenAssignment_11(), "rule__SavingOrder__TokenAssignment_11");
			builder.put(grammarAccess.getTokenBalanceAccess().getNameAssignment_1(), "rule__TokenBalance__NameAssignment_1");
			builder.put(grammarAccess.getTokenBalanceAccess().getBalanceAssignment_4(), "rule__TokenBalance__BalanceAssignment_4");
			builder.put(grammarAccess.getTokenBalanceAccess().getTokenAssignment_6(), "rule__TokenBalance__TokenAssignment_6");
			builder.put(grammarAccess.getTransferRequestAccess().getIDAssignment_1(), "rule__TransferRequest__IDAssignment_1");
			builder.put(grammarAccess.getTransferRequestAccess().getTypeAssignment_3_1(), "rule__TransferRequest__TypeAssignment_3_1");
			builder.put(grammarAccess.getTransferRequestAccess().getAmountAssignment_5(), "rule__TransferRequest__AmountAssignment_5");
			builder.put(grammarAccess.getTransferRequestAccess().getTokenAssignment_7(), "rule__TransferRequest__TokenAssignment_7");
			builder.put(grammarAccess.getTransferRequestAccess().getDestinationAssignment_9(), "rule__TransferRequest__DestinationAssignment_9");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
